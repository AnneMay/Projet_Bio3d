## obtention des PDB
aa <- get.seq("6MSM_A")
##Set-up
library(bio3d)
## obtention des PDB
aa <- get.seq("6MSM_A")
blast <- blast.pdb(aa)
hits <- plot.blast(blast, cutoff = 300) #DEfault cutoff = 368, hits = 12
#head(hits$pdb.id)
files <- get.pdb(hits$pdb.id, path = "pdbs", split = TRUE, gzip = TRUE)
pdbs <- pdbaln(files, fit=TRUE, web.args=list(email="anmayroy@gmail.com"))
ids <- basename.pdb(pdbs$id)
# Sequence identity
summary( c(seqidentity(pdbs)) )
# NMA on all structures
modes <- nma(pdbs)
hc.rd <- hclust(dist(rd))
grps.rd <- cutree(hc.rd, k=4)
plot(modes, pdbs, col=grps)
rd <- rmsd(pdbs)
hc <- hclust(as.dist(rd))
grps <- cutree(hc, k=7)
plot(modes, pdbs, col=grps)
rd <- rmsd(pdbs)
hc <- hclust(as.dist(rd))
grps <- cutree(hc, k=4)
plot(modes, pdbs, col=grps)
load("C:/Users/anmay/OneDrive - Universite de Montreal/Documents/DESS_Bio-INFO/BIF7105/Bio3d/Projet_Bio3d/.RData")
# Plot a correlation map with plot.dccm(cm)
plot(cm, sse=pdb.open, contour=F, col.regions=bwr.colors(20), at=seq(-1,1,0.1) )
# Aperçu rapide des résultats du NMA
plot(modes, sse=pdb)
## Protéine d'intérêt: 6MSM
pdb <- read.pdb("6MsM") #Modèle: 9703 atomes, 2 chaines (A et B); Protéine: 9466 atomes
##Set-up
library(bio3d)
## Protéine d'intérêt: 6MSM
pdb <- read.pdb("6MsM") #Modèle: 9703 atomes, 2 chaines (A et B); Protéine: 9466 atomes
p
# Aperçu rapide des résultats du NMA
plot(modes, sse=pdb)
# Calcul des modes de la protéine
modes.pdb <- nma(pdb)
pdb
# View the correlations in the structure (see Figure 5.)
pymol(cm, pdb.open, type="launch")
# Vector field representation (see Figure 3.)
pymol(modes, mode=7, file = "6MSM_vectField.pdb", type = "launch")
library(ggplot2)
library(ggrepel)
rd <- rmsd(pdbs)
# Perform PCA
pc.xray <- pca(pdbs)
hc.rd <- hclust(dist(rd))
grps.rd <- cutree(hc.rd, k=4)
plot(pc.xray, 1:2, col="grey50", bg=grps.rd, pch=21, cex=1)
df <- data.frame(x=pc.xray$z[,1], y=pc.xray$z[,2])
col <- as.factor(grps)
p <- ggplot(df, aes(x, y)) +
geom_point(aes(col=col), size=2) +
xlab("PC1") +
ylab("PC2") +
scale_color_discrete(name="Clusters") +
geom_text_repel(aes(label=ids))
p
pc.xray
pdbs
select(pdbs$id, -3GD7_A)
select(pdbs$id, -"3GD7_A")
library(tidyverse)
select(pdbs$id, -3GD7_A)
select(pdbs$id, -"3GD7_A")
select(pdbs$id)
select(pdbs, id)
pdbs$id
ids
plot(pdbs, labels=ids)
df
df2 <- select(df, -pdbs/split_chain/3GD7_A.pdb)
df2 <- filter(df, -pdbs/split_chain/3GD7_A.pdb)
df2 <- filter(df, -'pdbs/split_chain/3GD7_A.pdb')
df2 <- filter(df, - c('pdbs/split_chain/3GD7_A.pdb'))
df2 <- filter(df, row.names() != 'pdbs/split_chain/3GD7_A.pdb'))
pdbs$id
pdbs2 <- filter(pdbs, id != 'pdbs/split_chain/3GD7_A.pdb'))
pdbs2 <- filter(pdbs, id != 'pdbs/split_chain/3GD7_A.pdb')
pdbs2 <- trim(pdbs, id != 'pdbs/split_chain/3GD7_A.pdb')
pdbs2 <- trim(pdbs, id = 'pdbs/split_chain/3GD7_A.pdb')
pdbs2
View(pdbs2)
pdbs2 <- trim(pdbs, row.inds = which('pdbs/split_chain/3GD7_A.pdb'), inverse=TRUE)
pdbs2 <- trim(pdbs, row.inds = 'pdbs/split_chain/3GD7_A.pdb', inverse=TRUE)
pdbs$ali
pdbs$i/
d
pdbs$id
pdbs2 <- trim(pdbs, row.inds = c(1:17, 19:20))
View(pdbs2)
pdbs2$id
ids2 <- basename.pdb(pdbs2$id)
anno2 <- pdb.annotate(ids2)
# find invariant core
core2 <- core.find(pdbs2)
# superimpose all structures to core
pdbs2$xyz = pdbfit(pdbs2, core2)
# Perform PCA
pc.xray2 <- pca(pdbs2)
# Calculate RMSD
rd2 <- rmsd(pdbs2)
# Structure-based clustering
hc.rd2 <- hclust(dist(rd2))
grps.rd2 <- cutree(hc.rd2, k=4)
plot(pc.xray2, 1:2, col="grey50", bg=grps.rd2, pch=21, cex=1)
df2 <- data.frame(x=pc.xray2$z[,1], y=pc.xray2$z[,2])
col2 <- as.factor(grps2)
p2 <- ggplot(df2, aes(x, y)) +
geom_point(aes(col=col2), size=2) +
xlab("PC1") +
ylab("PC2") +
scale_color_discrete(name="Clusters") +
geom_text_repel(aes(label=ids2))
col2 <- as.factor(grps.rd2)
p2 <- ggplot(df2, aes(x, y)) +
geom_point(aes(col=col2), size=2) +
xlab("PC1") +
ylab("PC2") +
scale_color_discrete(name="Clusters") +
geom_text_repel(aes(label=ids2))
p2
hc.rd2 <- hclust(as.dist(rd2))
grps.rd2 <- cutree(hc.rd2, k=4)
df2 <- data.frame(x=pc.xray2$z[,1], y=pc.xray2$z[,2])
col2 <- as.factor(grps.rd2)
p2 <- ggplot(df2, aes(x, y)) +
geom_point(aes(col=col2), size=2) +
xlab("PC1") +
ylab("PC2") +
scale_color_discrete(name="Clusters") +
geom_text_repel(aes(label=ids2))
p2
p2 <- ggplot(df2, aes(x, y)) +
geom_point(aes(col2=col), size=2) +
xlab("PC1") +
ylab("PC2") +
scale_color_discrete(name="Clusters") +
geom_text_repel(aes(label=ids2))
col <- as.factor(grps.rd2)
p2 <- ggplot(df2, aes(x, y)) +
geom_point(aes(col=col), size=2) +
xlab("PC1") +
ylab("PC2") +
scale_color_discrete(name="Clusters") +
geom_text_repel(aes(label=ids2))
p2
hc.rd <- hclust(as.dist(rd2))
grps.rd <- cutree(hc.rd, k=4)
df2 <- data.frame(x=pc.xray2$z[,1], y=pc.xray2$z[,2])
col <- as.factor(grps.rd)
p2 <- ggplot(df2, aes(x, y)) +
geom_point(aes(col=col), size=2) +
xlab("PC1") +
ylab("PC2") +
scale_color_discrete(name="Clusters") +
geom_text_repel(aes(label=ids2))
p2
dev.off()
p2
grps.rd <- cutree(hc.rd, k=3)
grps.rd2 <- cutree(hc.rd, k=3)
df2 <- data.frame(x=pc.xray2$z[,1], y=pc.xray2$z[,2])
col2 <- as.factor(grps.rd2)
p2 <- ggplot(df2, aes(x, y)) +
geom_point(aes(col=col2), size=2) +
xlab("PC1") +
ylab("PC2") +
scale_color_discrete(name="Clusters") +
geom_text_repel(aes(label=ids2))
p2
#PCA
seqID <- seqidentity(pdbs)
df2 <- data.frame(x=pc.xray2$z[,2], y=pc.xray2$z[,3])
col2 <- as.factor(grps.rd2)
p2 <- ggplot(df2, aes(x, y)) +
geom_point(aes(col=col2), size=2) +
xlab("PC1") +
ylab("PC2") +
scale_color_discrete(name="Clusters") +
geom_text_repel(aes(label=ids2))
p2
p ##On voit ici que la strucure 3GD7_A (et 6GJQ_A) cause la majorité de la variation. On devrait reprendre l'analyse en exculant cette valeur
col <- as.factor(grps)
p <- ggplot(df, aes(x, y)) +
geom_point(aes(col=col), size=2) +
xlab("PC1") +
ylab("PC2") +
scale_color_discrete(name="Clusters") +
geom_text_repel(aes(label=ids))
p ##On voit ici que la strucure 3GD7_A (et 6GJQ_A) cause la majorité de la variation. On devrait reprendre l'analyse en exculant cette valeur
p2
df2 <- data.frame(x=pc.xray2$z[,1], y=pc.xray2$z[,2])
p2 <- ggplot(df2, aes(x, y)) +
geom_point(aes(col=col2), size=2) +
xlab("PC1") +
ylab("PC2") +
scale_color_discrete(name="Clusters") +
geom_text_repel(aes(label=ids2))
p2
write.pdb(backpdb, file="6MSM_back.pdb")
pdb$xyz
dim(pdb$xyz)
pdb$xyz[ 1, atom2xyz(1:2) ]
ca.inds <- atom.select(pdb, "calpha")
ca.inds
head( pdb$atom[ca.inds$atom, ] )
a.inds <- atom.select(pdb, chain="A")
ca.inds <- atom.select(pdb, "calpha", chain="A")
cab.inds <- atom.select(pdb, elety=c("CA","CB"), chain="A", resno=10:20)
b.inds <- atom.select(pdb, "back")
backpdb <- trim.pdb(pdb, b.inds)
write.pdb(backpdb, file="6MSM_back.pdb")
pdf("Présentaiton.pdf")
p
p2
dev.off()
plot(pc.xray, 1:2, col="grey50", bg=grps.rd, pch=21, cex=1)
plot(pdbs, labels=ids)
plot(modes, pdbs, col=grps, spread=TRUE)
dev.off()
plot(modes, pdbs, col=grps, spread=TRUE)
plot(pdbs, labels=ids)
aa <- get.seq("2PFG")
blast <- blast.pdb(aa)
hits <- plot.blast(blast, cutoff = 300) #DEfault cutoff = 368, hits = 12
#head(hits$pdb.id)
files <- get.pdb(hits$pdb.id, path = "pdbs", split = TRUE, gzip = TRUE)
pdbs <- pdbaln(files, fit=TRUE, web.args=list(email="anmayroy@gmail.com"))
ids <- basename.pdb(pdbs$id)
plot(pdbs, labels=ids)
files <- get.pdb(hits$pdb.id, path = "pdbs", split = TRUE, gzip = TRUE)
pdbs <- pdbaln(files, fit=TRUE, web.args=list(email="anmayroy@gmail.com"))
ids <- basename.pdb(pdbs$id)
plot(pdbs, labels=ids)
# Calculate sequence conservation
cons <- conserv(pdbs, method="entropy22")
# SSE annotations
sse <- pdbs2sse(pdbs, ind=1, rm.gaps=FALSE)
aa <- get.seq("2PFG")
blast <- blast.pdb(aa)
hits <- plot.blast(blast, cutoff = 300)
aa <- get.seq("2PFG_A")
View(aa)
blast <- blast.pdb(aa)
aa <- get.seq("P21554")
blast <- blast.pdb(aa)
View(aa)
blast <- blast.pdb(aa)
hits <- plot.blast(blast, cutoff = 300) #DEfault cutoff = 368, hits = 12
hits <- plot.blast(blast) #DEfault cutoff = 368, hits = 12
hits <- plot.blast(blast, cutoff = 200) #DEfault cutoff = 368, hits = 12
hits <- plot.blast(blast, cutoff = 100) #DEfault cutoff = 368, hits = 12
#head(hits$pdb.id)
files <- get.pdb(hits$pdb.id, path = "pdbs", split = TRUE, gzip = TRUE)
pdbs <- pdbaln(files, fit=TRUE, web.args=list(email="anmayroy@gmail.com"))
ids <- basename.pdb(pdbs$id)
plot(pdbs, labels=ids)
# Calculate sequence conservation
cons <- conserv(pdbs, method="entropy22")
# SSE annotations
sse <- pdbs2sse(pdbs, ind=1, rm.gaps=FALSE)
# Plot conservation per residue
plotb3(cons, sse=sse, ylab="Sequence entropy")
anno <- pdb.annotate(ids)
print(unique(anno$source))
# find invariant core
core <- core.find(pdbs)
# superimpose all structures to core
pdbs$xyz = pdbfit(pdbs, core)
# Perform PCA
pc.xray <- pca(pdbs)
# Calculate RMSD
rd <- rmsd(pdbs)
# Structure-based clustering
hc.rd <- hclust(dist(rd))
grps.rd <- cutree(hc.rd, k=4)
plot(pc.xray, 1:2, col="grey50", bg=grps.rd, pch=21, cex=1)
grps.rd <- cutree(hc.rd, k=3)
plot(pc.xray, 1:2, col="grey50", bg=grps.rd, pch=21, cex=1)
library(ggplot2)
library(ggrepel)
df <- data.frame(x=pc.xray$z[,1], y=pc.xray$z[,2])
col <- as.factor(grps)
p <- ggplot(df, aes(x, y)) +
geom_point(aes(col=col), size=2) +
xlab("PC1") +
ylab("PC2") +
scale_color_discrete(name="Clusters") +
geom_text_repel(aes(label=ids))
p
dev.off()
p
col <- as.factor(grps.rd)
p <- ggplot(df, aes(x, y)) +
geom_point(aes(col=col), size=2) +
xlab("PC1") +
ylab("PC2") +
scale_color_discrete(name="Clusters") +
geom_text_repel(aes(label=ids))
p
View(hits)
hits[["hits"]]
hits <- plot.blast(blast, cutoff = 70) #DEfault cutoff = 368, hits = 12
hits <- plot.blast(blast, cutoff = 40) #DEfault cutoff = 368, hits = 12
hits <- plot.blast(blast, cutoff = 45) #DEfault cutoff = 368, hits = 12
View(hits)
hits[["hits"]]
hits <- plot.blast(blast, cutoff = 42) #DEfault cutoff = 368, hits = 12
hits <- plot.blast(blast, cutoff = 45) #DEfault cutoff = 368, hits = 12
hits[["hits"]]
#head(hits$pdb.id)
files <- get.pdb(hits$pdb.id, path = "pdbs", split = TRUE, gzip = TRUE)
pdbs <- pdbaln(files, fit=TRUE, web.args=list(email="anmayroy@gmail.com"))
ids <- basename.pdb(pdbs$id)
plot(pdbs, labels=ids)
# Calculate sequence conservation
cons <- conserv(pdbs, method="entropy22")
# SSE annotations
sse <- pdbs2sse(pdbs, ind=1, rm.gaps=FALSE)
# Plot conservation per residue
plotb3(cons, sse=sse, ylab="Sequence entropy")
anno <- pdb.annotate(ids)
print(unique(anno$source))
# find invariant core
core <- core.find(pdbs)
# superimpose all structures to core
pdbs$xyz = pdbfit(pdbs, core)
# Perform PCA
pc.xray <- pca(pdbs)
# Calculate RMSD
rd <- rmsd(pdbs)
# Structure-based clustering
hc.rd <- hclust(dist(rd))
grps.rd <- cutree(hc.rd, k=3)
plot(pc.xray, 1:2, col="grey50", bg=grps.rd, pch=21, cex=1)
# Visualize first principal component
mktrj(pc.xray, pc=1, file="pc_1.pdb")
library(ggplot2)
library(ggrepel)
df <- data.frame(x=pc.xray$z[,1], y=pc.xray$z[,2])
col <- as.factor(grps.rd)
p <- ggplot(df, aes(x, y)) +
geom_point(aes(col=col), size=2) +
xlab("PC1") +
ylab("PC2") +
scale_color_discrete(name="Clusters") +
geom_text_repel(aes(label=ids))
p
hits <- plot.blast(blast, cutoff = 50) #DEfault cutoff = 368, hits = 12
files <- get.pdb(hits$pdb.id, path = "pdbs", split = TRUE, gzip = TRUE)
pdbs <- pdbaln(files, fit=TRUE, web.args=list(email="anmayroy@gmail.com"))
ids <- basename.pdb(pdbs$id)
plot(pdbs, labels=ids)
# Calculate sequence conservation
cons <- conserv(pdbs, method="entropy22")
# SSE annotations
sse <- pdbs2sse(pdbs, ind=1, rm.gaps=FALSE)
# Plot conservation per residue
plotb3(cons, sse=sse, ylab="Sequence entropy")
anno <- pdb.annotate(ids)
print(unique(anno$source))
# find invariant core
core <- core.find(pdbs)
# superimpose all structures to core
pdbs$xyz = pdbfit(pdbs, core)
# Perform PCA
pc.xray <- pca(pdbs)
# Calculate RMSD
rd <- rmsd(pdbs)
# Structure-based clustering
hc.rd <- hclust(dist(rd))
grps.rd <- cutree(hc.rd, k=3)
plot(pc.xray, 1:2, col="grey50", bg=grps.rd, pch=21, cex=1)
# Visualize first principal component
mktrj(pc.xray, pc=1, file="pc_1.pdb")
library(ggplot2)
library(ggrepel)
df <- data.frame(x=pc.xray$z[,1], y=pc.xray$z[,2])
col <- as.factor(grps.rd)
p <- ggplot(df, aes(x, y)) +
geom_point(aes(col=col), size=2) +
xlab("PC1") +
ylab("PC2") +
scale_color_discrete(name="Clusters") +
geom_text_repel(aes(label=ids))
p
